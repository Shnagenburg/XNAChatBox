/**
 * By: Daniel Fuller 
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;

namespace ChatBox
{
    /// <summary>
    /// A filled rectangle is a rectangle generated by the graphics device.
    /// </summary>
    class FilledRectangle
    {
        public GraphicsDevice GraphicsDevice;
        public Rectangle Box = new Rectangle(0,0,0,0);
        private Color cAlpha = Color.White;
        public byte Alpha 
        {
            get { return cAlpha.A;}
            set { cAlpha.A = value;}
        }


        // The pixel that we stretch into the rectangle.
        protected Texture2D tPixel = new Texture2D(CUtil.GraphicsDevice,1,1);

        // Default color is white
        public Color Color
        {
            set
            {
                Color color = value;

                if (tPixel != null)
                    tPixel.Dispose();
                
                tPixel = new Texture2D(GraphicsDevice, 1, 1, false, SurfaceFormat.Color);

                //Set the color array to a single color
                Color[] colorArray = {color};

                //set the color data on the texture
                tPixel.SetData(colorArray);
            }
        }

        /// <summary>
        /// Creates a blank filled rectangle.
        /// </summary>
        /// <param name="graphicsDevice"></param>
        public FilledRectangle(GraphicsDevice graphicsDevice) 
        {
            GraphicsDevice = graphicsDevice;
        }

        /// <summary>
        /// Created a filled rectangle.
        /// </summary>
        /// <param name="x"></param>
        /// <param name="y"></param>
        /// <param name="width"></param>
        /// <param name="height"></param>
        /// <param name="graphicsDevice"></param>
        public FilledRectangle(int x, int y, int width, int height, GraphicsDevice graphicsDevice)
        {
            Box.X = x;
            Box.Y = y;
            Box.Width = width;
            Box.Height = height;

            GraphicsDevice = graphicsDevice;
        }

        /// <summary>
        /// Creates the texture for the filled rectangle.
        /// </summary>
        /// <param name="graphics"></param>
        public virtual void LoadContent(GraphicsDevice graphics)
        {
            // Make the single pixel texture
            tPixel = new Texture2D(graphics, 1, 1);

            // Set the color of the pixel to white.
            Color [] colorArray = { Color.White };
            tPixel.SetData(colorArray);
        }

        /// <summary>
        /// Draws the filled rectangle.
        /// </summary>
        /// <param name="theBatch"></param>
        public virtual void Draw(SpriteBatch theBatch)
        {
            theBatch.Draw(tPixel, Box, cAlpha);
        }



        /// <summary>
        /// Set the gradient with four colors.
        /// </summary>
        /// <param name="colors">
        /// An array of four colors</param>
        public void SetColors(Color[] colors)
        {
            if (colors.Length > 4)
                return;

            if (tPixel != null)
                tPixel.Dispose();

            tPixel = new Texture2D(GraphicsDevice, 2, 2, false, SurfaceFormat.Color);
            
            //set the color data on the texture
            tPixel.SetData(colors);
        }

    }
}
